*****
Q: Now answer the following question: Is it possible to go from node 86 to node c4 directly?
Return an answer in JSON format shown below:
{
    'ANSWER': True/False,
    'REASONING': <Reasoning for answer>
}
A: {
    'ANSWER': False
    'REASONING': "" According to the scene graph, c4 is directly connected to ca and f7 only, thus it is not possible to go from 86 to c4 directly""
   }

*****
Q: Now answer the following question: If I walk from node 0a to node 81 and take a right turn which node will I reach first?
Return an answer in JSON format shown below:
{
    'Answer': Node ID,
    'Reasoning': <Reasoning for answer>
}
A: {
    
'ANSWER': "03",

'REASONING': ""From the image:
1. 0a is south of 81
2. The nodes immediately to the east of 81 are 03 and 19
3. The first node after turning right at 81 when approaching from 0a is 03""
}

*****
Q: Now answer the following question: If I walk from node ca to node 86, which direction am I walking?
                              Return an answer in JSON format shown below:
{
    'Answer': DIRECTION,
    'Reasoning': <Reasoning for answer>
}
A: {   
    'ANSWER': 'NORTH-EAST',
    'REASONING': ""
    According to the image: ca is to the bottom left of 86
    From the scene graph json: ca has position(86,148) and 86 has position(108,137). Assuming up is North, this means that 86 is top and right of ca. 
    Thus, when walking from ca to 86, you will be walking north-east""
}

*****
Q: Now answer the following question: If I walk from node c0 to node 67, which direction should I turn to reach node 2b?
Return an answer in JSON format shown below:
{
    'Answer': DIRECTION,
    'Reasoning': <Reasoning for answer>
}
A: {
    'Answer': 'SOUTH',
    'REASONING': ""From the scene graph, 67 is directly connected to a6,86 and ad. 
    Thus, 2b is not directly reachable from 67. However, from the image and scene graph, ad is connected to 2b. 
    The shortest path to reach 2b from 67 seems to be through ad. Thus to reach 2b from 67, you need to walk straight ahead.
    From the image, 2b is almost directly below 67 and from the scene graph, 2b is at position(140,164) while 67 is at position (139,128)
    Thus 2b is South of 67.""
}

*****
Q: Let's initialize a simulator (like Gazebo) with the world given in the image and described by the json file and try to orchestrate the following human-robot scenario: 
        
Robot is transporting a box from one point to another in the warehouse. Along the way, it encounters an employee walking in the opposite direction and another employee walking in the same direction as the robot in a passageway.

You must select the trajectories of the humans and the robot to orchestrate this scenario. You must also assign integer group ids to the HUMANS ONLY involved in the scenario according to the 
following rule:
1. If a human is not involved in any groups, assign them a group id of -1. If the scenario does not specifically mention a group, then assign -1 to all humans.
2. All the humans of the same group must have the same group id.
3. All humans involved in the scenario must be assigned a group id.
Ensure that you choose paths for the robot and the human accounting for the types of nodes and edges required for the scenario. 

Format your output in json as given below:
        {
            'REASONING': <Explain Scenario Location, Robot and human trajectory choice and group id assignment>,
            'TRAJECTORIES': {
                'ROBOT': <...>
                'HUMAN 1': <...>,
                'HUMAN 2': <...>,
                'HUMAN 3': <...>,
            },
            'GROUP ID':{
                'HUMAN 1': ..,
                'HUMAN 2': ...,
                ...
            }
        }
A: {
'REASONING':""
        ### Scenario Location:
        This scenario requires a long a passageway where the humans and the robot encounter each other.
        Edges of type passageway from the scene graph are: 81-0a, 0a-c0, c4-ca, c4-f7, f7-f2, 1a-ca
        f7-c4 is a straight edge of type passageway and ca-c4 is a straight edge of type passageway. 
        Thus ca-c4-f7 makes a long passageway suitable for this scenario. 
        The robot starts at one node of any type and moves along nodes of type passageway towards a destination node.
        An employee starts at the destination node and moves along the same passageway towards robot.

        ### robot's Trajectory:
        1. before encountering humans: 1a-ca
        2. encounter employees somewhere in the edges ca-c4 and c4-f7
        3. exit the passageway and go to f2 and df (drops the box here)
        Thus, robot's trajectory: 1a,ca,c4,f7,f2,df
        
        ### Employee 1 Trajectory (moving opposite to the robot):
        1. before encountering robot: f2->f7
        2. encounter robot somewhere in the edges ca-c4 and c4-f7
        3. exit the passageway and go to 1a
        Thus, Employee 1 trajectory: f2,f7,c4,ca,1a

        ### Employee 2 Trajectory (moving alongside the robot):
        1. Start at node ca
        2. encounter robot somewhere in the edges ca-c4 and c4-f7
        3. exit the passageway and go to f2 and df
        Thus, Employee 2 trajectory: ca,c4,f7,f2,df
        
        ### Group IDs:
        Since the 2 employees in the scenario are not part of any single group, they both have group_ids of -1 (default, no group)."",

'TRAJECTORIES': {
    'ROBOT': ['1a','ca','c4','f7','f2','df'],
    'HUMAN 1': ['f2','f7','c4','ca','1a'],
    'HUMAN 2': ['ca','c4','f7','f2','df']
},
'GROUP ID':{
    'HUMAN 1': -1,
    'HUMAN 2': -1
    }
}

*****
Q: Now generate trajectories for the following scenario: 
                             
While going to its goal, the robot reaches an intersection on the way where two warehouse employees are standing and talking. 
        
You must select the trajectories of the humans and the robot to orchestrate this scenario. You must also assign integer group ids to the HUMANS ONLY involved in the scenario according to the following rule:
1. All the members of the same group must have the same group id.
2. If a human is not involved in a group, they will have a group id of -1.
3. All humans involved in the scenario must be assigned a group id.
Format your output in json as given below:
        {
           'REASONING': <Explain Scenario Location, Robot and human trajectory choice and group id assignment>,
             'TRAJECTORIES': {
                'ROBOT': <...>
                'HUMAN 1': <...>,
                'HUMAN 2': <...>,
                'HUMAN 3': <...>,
            },
            'GROUP IDS':{
                'HUMAN 1': ..,
                'HUMAN 2': ...,
                ...
            }
}
A: {
'REASONING':""

        ### Scenario Location:
        To create this scenario, we need to identify a suitable intersection.
        Nodes of type INTERSECTION from the scene graph are: '67', 'ca'
        1. robot starts at one node of any type and reaches a node of type intersection and has a goal beyond this node 
        2. The employees are stationary and stand in the intersection node

        ### Suggested intersection:
        Based on the scene graph, 67 is an intersection node which is suitable for this scenario.
        
        ### Trajectory Logic:
        Let's ensure that the robot arrives at the intersection which falls on the way for the robot from start to finish.
        
        ### robot's Trajectory:
        1. before encountering group at intersection: 0a-c0, c0-67
        2. encounter employees at 67
        3. navigate past them to reach the goal 2b through ad
        Thus, robot's trajectory: 0a,c0,67,ad,2b
        
        ### Employee 1 Trajectory:
        1. standing at 67
        Thus, Employee 1 trajectory: 67

        ### Employee 2 Trajectory:
        1. standing at 67
        Thus, Employee 2 trajectory: 67

        Since the 2 employees in the scenario are part of a single group, they both have group_ids of 1."",

'TRAJECTORIES': {
    'ROBOT': ['0a','c0','67','ad','2b'],
    'HUMAN 1': ['67'],
    'HUMAN 2': ['67']
},
'GROUP ID':{
    'HUMAN 1': 1,
    'HUMAN 2': 1
    }
}